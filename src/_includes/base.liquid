<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name='viewport' content='width=device-width'>

  <title>{{ title }} - Sconner.net</title>

  <meta name='description' content='{{ site.description }}'>
  <meta name="theme-color" content="#ffffff" />
  <link rel="icon" type="image/png" sizes="32x32" href="/assets/img/favicon/favicon-32x32.png">
  <link rel="apple-touch-icon" href="/assets/img/favicon/apple-touch-icon.png">
  <link rel="manifest" href="/manifest.json" />
  <link href="/assets/styles/tailwind.css" rel="stylesheet" />
  <link href="/assets/styles/index.css" rel="stylesheet" />
  <script>
    // It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes
    if (
      localStorage.getItem('color-theme') === 'dark' ||
      (!('color-theme' in localStorage) &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  </script>

</head>


<body class="dark:text-white dark:bg-gray-900">
  <script>
    document.body.className = ((document.body.className) ? document.body.className + ' js-enabled' : 'js-enabled');
  </script>
  <header role="banner">
    <a class="skip-link" href="#maincontent">Skip to main content</a>
    <div class="flex flex-col dark:prose-dark">
      <div class="flex-1 w-11/12 max-w-screen-sm md:max-w-screen-lg mx-auto">

        {% include 'nav' %}

      </div>
    </div>
  </header>

  {{ content }}

  <script>

    var themeToggleBtn = document.getElementById('theme-toggle');
    var themeoutput = document.getElementById('themeoutput')
    var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
    var themeText = document.getElementById('themeText')

    // Change the icons inside the button based on previous settings
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      themeToggleLightIcon.classList.remove('hidden');
      themeoutput.innerHTML = 'Dark theme is currently active'
      themeText.innerHTML = 'Activate light theme'
    } else {
      themeToggleDarkIcon.classList.remove('hidden');
      themeoutput.innerHTML = 'Light theme is currently active'
      themeText.innerHTML = 'Activate dark theme'
    }


    themeToggleBtn.addEventListener('click', function () {

      // toggle icons inside button
      themeToggleDarkIcon.classList.toggle('hidden');
      themeToggleLightIcon.classList.toggle('hidden');

      // if set via local storage previously
      if (localStorage.getItem('color-theme')) {
        if (localStorage.getItem('color-theme') === 'light') {
          document.documentElement.classList.add('dark');
          themeoutput.innerHTML = 'Dark theme is currently active'
          themeText.innerHTML = 'Activate light theme'
          localStorage.setItem('color-theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('color-theme', 'light');
          themeText.innerHTML = 'Activate dark theme'
          themeoutput.innerHTML = 'Light theme is currently active'
        }

        // if NOT set via local storage previously
      } else {
        if (document.documentElement.classList.contains('dark')) {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('color-theme', 'light');
          themeoutput.innerHTML = 'Light theme is currently active'
          themeText.innerHTML = 'Activate light theme'
        } else {
          document.documentElement.classList.add('dark');
          localStorage.setItem('color-theme', 'dark');
          themeoutput.innerHTML = 'Dark theme is currently active'
          themeText.innerHTML = 'Activate dark theme'
        }
      }

    }
    );
  </script>
  <script>
    var themeoutput = document.getElementById('themeoutput')
    var themeToggleDarkIconMob = document.getElementById('theme-toggle-dark-icon-mob');
    var themeToggleLightIconMob = document.getElementById('theme-toggle-light-icon-mob');

    // Change the icons inside the button based on previous settings
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      themeToggleLightIconMob.classList.remove('hidden');
    } else {
      themeToggleDarkIconMob.classList.remove('hidden');
    }

    var themeToggleBtn = document.getElementById('theme-toggle-mob');


    themeToggleBtn.addEventListener('click', function () {

      // toggle icons inside button
      themeToggleDarkIconMob.classList.toggle('hidden');
      themeToggleLightIconMob.classList.toggle('hidden');

      // if set via local storage previously
      if (localStorage.getItem('color-theme')) {
        if (localStorage.getItem('color-theme') === 'light') {
          document.documentElement.classList.add('dark');
          themeoutput.innerHTML = 'Dark theme is currently active'
          localStorage.setItem('color-theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          themeoutput.innerHTML = 'Light theme is currently active'
          localStorage.setItem('color-theme', 'light');
        }

        // if NOT set via local storage previously
      } else {
        if (document.documentElement.classList.contains('dark')) {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('color-theme', 'light');
          themeoutput.innerHTML = 'Light theme is currently active'
        } else {
          document.documentElement.classList.add('dark');
          themeoutput.innerHTML = 'Dark theme is currently active'
          localStorage.setItem('color-theme', 'dark');
        }
      }

    }
    );
  </script>
  <script>
    // Grab HTML Elements
    const btn = document.getElementById("menubtn");
    const menu = document.querySelector(".mobile-menu");

    // Add Event Listeners
    btn.addEventListener("click", () => {
      menu.classList.toggle("hidden");
      // toggle icons inside button
      burgeropen.classList.toggle('hidden');
      burgerclosed.classList.toggle('hidden');
    });
  </script>

  <script>
    var menuToggle = document.querySelector("#menubtn");
    var accessibleMenu = document.querySelector(".mobile-menu");

    menuToggle.addEventListener("click", function (event) {
      var menuOpen = accessibleMenu.classList.contains("active");
      var newMenuOpenStatus = !menuOpen;

      menuToggle.setAttribute("aria-expanded", newMenuOpenStatus);
      accessibleMenu.classList.toggle("active");
    });
  </script>
</body>

</html>